<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PayrollEngine.Serilog</name>
    </assembly>
    <members>
        <member name="T:PayrollEngine.Serilog.ConfigurationExtensions">
            <summary>Extension for the serilog configuration</summary>
        </member>
        <member name="M:PayrollEngine.Serilog.ConfigurationExtensions.SetupSerilog(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Setup serilog </summary>
        </member>
        <member name="T:PayrollEngine.Serilog.PayrollLog">
            <summary>Serilog logger</summary>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.IsEnabled(PayrollEngine.LogLevel)">
            <summary>Determine if events at the specified level will be passed through to the log sinks</summary>
            <param name="level">Level to check</param>
            <returns>True if the level is enabled; otherwise, false</returns>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Write(PayrollEngine.LogLevel,System.String,System.Object[])">
            <summary>Write a log event with the specified level</summary>
            <param name="level">The level of the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Write(PayrollEngine.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the specified level and associated exception</summary>
            <param name="level">The level of the event</param>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Trace(System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Verbose"/> level</summary>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Verbose("Staring into space, wondering if we're alone.");
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Trace(System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Verbose"/> level and associated exception</summary>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Verbose(ex, "Staring into space, wondering where this comet came from.");
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Debug(System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Debug"/> level</summary>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Debug("Starting up at {StartedAt}.", DateTime.Now);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Debug(System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Debug"/> level and associated exception</summary>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Debug(ex, "Swallowing a mundane exception");
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Information(System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Information"/> level</summary>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Information("Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Information(System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Information"/> level and associated exception</summary>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Information(ex, "Processed {RecordCount} records in {TimeMS}.", records.Length, sw.ElapsedMilliseconds);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Warning(System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Warning"/> level</summary>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Warning("Skipped {SkipCount} records.", skippedRecords.Length);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Warning(System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Warning"/> level and associated exception</summary>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Warning(ex, "Skipped {SkipCount} records.", skippedRecords.Length);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Error(System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Error"/> level</summary>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Error("Failed {ErrorCount} records.", brokenRecords.Length);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Error(System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Error"/> level and associated exception</summary>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Error(ex, "Failed {ErrorCount} records.", brokenRecords.Length);
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Critical(System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Fatal"/> level</summary>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Fatal("Process terminating.");
            </example>
        </member>
        <member name="M:PayrollEngine.Serilog.PayrollLog.Critical(System.Exception,System.String,System.Object[])">
            <summary>Write a log event with the <see cref="F:PayrollEngine.LogLevel.Fatal"/> level and associated exception</summary>
            <param name="exception">Exception related to the event</param>
            <param name="messageTemplate">Message template describing the event</param>
            <param name="propertyValues">Objects positionally formatted into the message template</param>
            <example>
            Log.Fatal(ex, "Process terminating.");
            </example>
        </member>
    </members>
</doc>
